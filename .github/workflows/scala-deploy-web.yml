name: scala-deploy-web

on:
  workflow_call:
    inputs:
      jdk-version:
        required: false
        description: 'jdk version'
        type: string
        default: '8'
      environment:
        type: string
        description: environment
        required: true
      name:
        type: string
        description: name
        required: true
    secrets:
      SYSADMIN_PAT:
        required: true
      NEXUS_USER:
        required: true
      NEXUS_PASSWORD:
        required: true
      DEPLOY_KEY:
        required: true
      DEPLOY_IP:
        required: true
      DEPLOY_PORT:
        required: true


jobs:
  testing:
    if: github.event.inputs.environment == 'testing'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      NEXUS_USER: ${{ secrets.NEXUS_USER }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
    steps:
      - name: Checkout / Setup JDK / sbt-cache
        uses: BQN-UY/action_checkout_jdk_sbt-cache@main
        with:
          token: ${{ secrets.SYSADMIN_PAT }}
          jdk-version: ${{ github.event.inputs.jdk-version }}

      - name: Build war
        run: sbt package

      - name: Get current version
        run: |
          versionString=$(awk '/ThisBuild \/ version := /;{print $NF}' version.sbt)
          echo "VERSION=`echo ${versionString:1:-1}`" >> $GITHUB_ENV

      - name: Storage Testing War
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
        with:
          flags: '-avz --delete'
          options: ''
          ssh_options: '-p ${{secrets.DEPLOY_PORT}}'
          src: 'target/${{github.event.inputs.name}}.war'
          dest: 'github@${{secrets.DEPLOY_IP}}:/opt/publisher/testing/${{github.event.inputs.name}}/${{github.event.inputs.name}}-${{env.VERSION}}.war'
#          dest: 'github@${{secrets.DEPLOY_IP}}:/opt/publisher/testing/${{github.event.inputs.name}}/${{github.event.inputs.name}}-${{env.VERSION}}.war
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TESTING_DEPLOY_IP }}
          username: github
          key: ${{ secrets.TESTING_DEPLOY_KEY }}
          port: ${{ secrets.TESTING_DEPLOY_PORT }}
          script: |
            json=""
            # Curl para el crumbs
            crumb=$(curl -u "github:${{ secrets.JENKINS_TOKEN_PRODUCTION }}" -s 'http://jenkins.soporte/crumbIssuer/api/json')
            # Curl para ejecutar
            curl -u "github:${{ secrets.JENKINS_TOKEN_PRODUCTION }}" -H "$crumb" -X POST 'http://jenkins.soporte/job/Soporte/job/DeployApp/buildWithParameters?SISTEMA=${{github.event.inputs.name}}&ENVIRONMENT=testing&VERSION=${{github.event.inputs.name}}-${{env.VERSION}}.war&INSTALLATION=${{github.event.inputs.name}}'



