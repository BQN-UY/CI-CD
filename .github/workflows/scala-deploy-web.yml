name: scala-deploy-web

on:
  workflow_call:
    inputs:
      jdk-version:
        type: string
        description: 'jdk version'
        default: '8'
        required: false
      name:
        type: string
        description: name
        required: true
    secrets:
      SYSADMIN_PAT:
        required: true
      NEXUS_USER:
        required: true
      NEXUS_PASSWORD:
        required: true
      DEPLOY_USER:
        required: true
      DEPLOY_KEY:
        required: true
      DEPLOY_IP:
        required: true
      DEPLOY_PORT:
        required: true
      JENKINS_URL:
        required: true
      JENKINS_DEPLOY_JOB:
        required: true
      JENKINS_USER:
        required: true
      JENKINS_TOKEN:
        required: true
      PUBLISHER_PATH:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      NEXUS_USER: ${{ secrets.NEXUS_USER }}
      NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
    steps:
      - name: Checkout / Setup JDK / sbt-cache
        uses: BQN-UY/action_checkout_jdk_sbt-cache@main
        with:
          token: ${{ secrets.SYSADMIN_PAT }}
          jdk-version: ${{ inputs.jdk-version }}

      - name: Build war
        run: sbt package

      - name: Get current version
        run: |
          versionString=$(awk '/ThisBuild \/ version := /{print $NF}' version.sbt)
          echo "VERSION=`echo ${versionString:1:-1}`" >> $GITHUB_ENV

      - name: Storage War
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
        with:
          flags: '-avz --delete'
          options: ''
          ssh_options: '-p ${{secrets.DEPLOY_PORT}}'
          src: 'target/${{inputs.name}}.war'
          dest: '${{ secrets.DEPLOY_USER }}@${{secrets.DEPLOY_IP}}:${{ secrets.PUBLISHER_PATH }}/${{inputs.name}}/versiones/${{inputs.name}}-${{env.VERSION}}.war'
      
      - name: Executing deloy script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_IP }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            # Curl para el crumbs
            crumb=$(curl -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" -s '${{ secrets.JENKINS_URL }}/crumbIssuer/api/json')
            # Curl para ejecutar
            curl -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" -H "$crumb" -X POST '${{ secrets.JENKINS_URL }}/${{ secrets.JENKINS_DEPLOY_JOB }}/buildWithParameters?SISTEMA=${{inputs.name}}&VERSION=${{env.VERSION}}'
